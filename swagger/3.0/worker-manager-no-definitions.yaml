# MAINTENANCE WARNING
# DO NOT MODIFY job-manager.yaml and worker-manager.yaml directly. Modify model-definitions.yaml
# and/or worker-manager-no-definitions.yaml and job-manager-no-definitions.yaml instead,
# then run the gen_wm_server.sh or .bat and gen_jm_server.sh or .bat scripts to produce
# job-manager.yaml and worker-manager.yaml; then check those in.
# MAINTENANCE WARNING
openapi: 3.0.1
info:
  title: CloudOS Compute Worker API
  description: >-
    Rest API for workers to pull jobs and report progress, liveness and
    completion. All APIs use a prefix of /api/v1.
  termsOfService: 'http://www.autodesk.com'
  contact:
    name: Forge platform and Components - Compute team
    url: 'http://www.autodesk.com'
    email: cloudos-compute@autodesk.com
  license:
    name: Autodesk
    url: 'http://www.autodesk.com'
  version: 1.0.18
servers:
  - url: https://worker-manager.fpccomp-c-uw2.cosv2-c-uw2.autodesk.com/api/v1
  - url: https://worker-manager.fpccomp-s-ue1-ds.cosv2-s-ue1-ds.autodesk.com/api/v1
  - url: https://worker-manager.fpccomp-s-ue1-dn.cosv2-s-ue1-dn.autodesk.com/api/v1
  - url: https://worker-manager.fpccomp-s-ew1-es.cosv2-s-ew1-es.autodesk.com/api/v1
  - url: https://worker-manager.fpccomp-p-ue1-ds.cosv2-p-ue1-ds.autodesk.com/api/v1
  - url: https://worker-manager.fpccomp-p-ue1-dn.cosv2-p-ue1-dn.autodesk.com/api/v1
  - url: https://worker-manager.fpccomp-p-ew1-es.cosv2-p-ew1-es.autodesk.com/api/v1
  - url: https://worker-manager.fpccomp-p-as2.cosv2-p-as2.autodesk.com/api/v1
paths:
  /healthcheck:
    get:
      summary: Health Check
      description: >-
        Returns the health of the Service with details. If health is OK, returns
        200.
      operationId: healthcheckGet
      parameters:
        - name: x-vault-token
          in: header
          schema:
            type: string
        - name: x-user
          in: header
          schema:
            type: string
      responses:
        '200':
          description: The JSON to return for a successful healthcheck
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /poll:
    post:
      description: Returns a job specific to the service type
      operationId: pollForJob
      requestBody:
        description: name of service to pull the jobs for
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Worker'
        required: true
      responses:
        '200':
          description: Job to work on
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        '404':
          description: No Job is found
          content: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - BasicAuth: []
      x-codegen-request-body-name: pollData
  /complete:
    post:
      description: conclude job
      operationId: postComplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conclusion'
        required: true
      responses:
        '200':
          description: response
          content: {}
        '400':
          description: Job id is invalid or trying to modify a completed job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        '408':
          description: Job timed out before reaching completion.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - BasicAuth: []
      x-codegen-request-body-name: data
  /token:
    post:
      description: Acquire an auth token and (optionally) refresh it.
      operationId: acquireToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcquireTokenArguments'
        required: true
      responses:
        '200':
          description: Worker token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: JobId or JobSecret are invalid, or trying to get a token for a completed job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        '404':
          description: No token found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoTokenResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - BasicAuth: []
    get:
      description: Get auth token and optionally refresh existing token and get it.
      operationId: getToken
      parameters:
        - name: jobID
          in: query
          required: true
          schema:
            pattern: >-
              [0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}(:array(:(0|([1-9]\d{0,3})))?)?
            type: string
        - name: jobSecret
          in: query
          required: true
          schema:
            type: string
        - name: refresh
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Worker token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Job Id is invalid or trying to get a token for a completed job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        '404':
          description: No token found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoTokenResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - BasicAuth: []
  /progress:
    post:
      description: Report progress in percent complete and intermediate details
      operationId: postProgress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Progress'
        required: true
      responses:
        '200':
          description: Progress reporting response
          content: {}
        '400':
          description: Job Id is invalid or trying to modify a completed job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        '408':
          description: Job attempt has timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - BasicAuth: []
      x-codegen-request-body-name: progress data
  /heartbeat:
    post:
      description: 'Report that a worker is alive, and working on a specific job'
      operationId: postHeartbeat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Heartbeat'
        required: true
      responses:
        '200':
          description: Response with cancellation notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeartbeatResponse'
        '400':
          description: Job Id is invalid or trying to modify a completed job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - BasicAuth: []
      x-codegen-request-body-name: data
  '/jobs/{id}':
    get:
      tags:
        - developers
      description: Returns a single job for given job ID
      operationId: getJob
      parameters:
        - name: id
          in: path
          description: ID of job to fetch
          required: true
          schema:
            type: string
            format: base64
      responses:
        '200':
          description: job details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          description: Job does not belong to this worker
          content: {}
        '404':
          description: job not found
          content: {}
        '409':
          description: Job is in a terminal state
          content: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - BasicAuth: []
