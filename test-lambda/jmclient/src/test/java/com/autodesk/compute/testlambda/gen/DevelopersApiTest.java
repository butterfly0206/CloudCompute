/*
 * CloudOS Compute API
 * CloudOS Compute API for batch style workloads in Autodesk. Developers can register compute worker types by following the cloudOS2.0 onboarding process. Users can submit jobs against registered worker types. The system treats input and output as opaque JSON payloads that must confirm to the JSON schema specified by the worker documentation outside this system. All APIs are used with the /api/v1 prefix. 
 *
 * The version of the OpenAPI document: 1.0.16
 * Contact: cloudos-compute@autodesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.autodesk.compute.testlambda.gen;

import com.autodesk.compute.testlambda.gen.ApiException;
import com.autodesk.compute.common.model.Error;
import com.autodesk.compute.common.model.Job;
import com.autodesk.compute.common.model.JobArgs;
import com.autodesk.compute.common.model.SearchResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DevelopersApi
 */
@Ignore
public class DevelopersApiTest {

    private final DevelopersApi api = new DevelopersApi();

    
    /**
     * Creates a job in the system
     *
     * Creates a job for a particular compute worker type. Jobs are immutable from the client point of view once created and cannot be modified. A job will go through its own state machine and succeed or fail for various reasons including a worker-specific (defaults to 1 hour) or a worker no-longer heartbeating its progress (by default, required every 2 minutes). All jobs will be deleted from the system after 30 days of lifetime. Input payload for the job must comply with the JSON specification provided by the job worker developer. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createJobTest() throws ApiException {
        JobArgs jobArgs = null;
        Boolean noBatch = null;
        Job response = api.createJob(jobArgs, noBatch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes a single job for given job ID. A job can be deleted at any stage of its lifecycle. Since jobs are immutable, delete is synonymous to cancel and no separate cancel api is needed. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteJobTest() throws ApiException {
        String id = null;
        api.deleteJob(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a single job for given job ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobTest() throws ApiException {
        String id = null;
        Job response = api.getJob(id);

        // TODO: test validations
    }
    
    /**
     * Search recently (up to 30 days) modified jobs, regardless of status.
     *
     * Returns any recent job regardless of status within the time scope. The item order in the pages returned is arbitrary. A single query operation can retrieve a variable number of items, limited by the lesser of a maximum of 1 MB of data or maxResults (# of items per page). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchRecentJobsTest() throws ApiException {
        String service = null;
        Integer maxResults = null;
        String fromTime = null;
        String toTime = null;
        String tag = null;
        String nextToken = null;
        SearchResult response = api.searchRecentJobs(service, maxResults, fromTime, toTime, tag, nextToken);

        // TODO: test validations
    }
    
}
